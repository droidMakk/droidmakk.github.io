"use strict";var precacheConfig=[["/index.html","2a7ad01eba92b21080f82b07d81a3be5"],["/static/css/main.eb446c2e.css","bafa72c9b4837890d4fdaae665ebae82"],["/static/js/0.bd32cad7.chunk.js","eb64567c810ba9a672723cfd57eb2cb6"],["/static/js/main.36cc7041.js","92e976ee1c5639ef4dd09af22d4f47e9"],["/static/media/GithubWhite.36f55bc1.svg","36f55bc1ec19f2e756d3ddbc6a9f0e77"],["/static/media/LinkedinWhite.79cb6793.svg","79cb6793ed2115106cde445b11e2140a"],["/static/media/OptEducation.3ab3b917.jpg","3ab3b9170af202a41cb6bfb08aa70d50"],["/static/media/TwitterWhite.ad2d322f.svg","ad2d322f09a5a0f2b2840ae3c0d50f5d"],["/static/media/banner.f4314312.jpeg","f4314312073a86bac7c936a94ec10916"],["/static/media/bg_chennai.3bfb8377.jpg","3bfb837798c971b8d1d1a98663c837a9"],["/static/media/datacamp.8d37c64f.svg","8d37c64f7fdfee469018e623b150e7f6"],["/static/media/dev_bg.9c351d0e.jpg","9c351d0e9e4d5ceb1787f23f52201d06"],["/static/media/education.0adf0b7e.svg","0adf0b7e553c01ca3db0fe0bb55f4a2c"],["/static/media/ham-menu.3c5ed26b.svg","3c5ed26b71e5991fd798a38021b66d5f"],["/static/media/network.b6c69f5c.svg","b6c69f5c1046a7e7fd4d5bf1edbe5f2c"],["/static/media/optmeanduniquebg.bc86e167.jpg","bc86e167ee3c071bf23e3778e1421579"],["/static/media/pdf.390ef900.svg","390ef9004d1a0ebcd61dcf816a170be4"],["/static/media/profileIcon.89e1d52c.svg","89e1d52c15b8dd3183cb7d581ba335c9"],["/static/media/profile_image.57944086.jpg","57944086f88e1426f5f99a0f073712f4"],["/static/media/student.c80716f8.svg","c80716f8a4461be63d38a1eb181e263e"],["/static/media/whatsapp-logo.962e0e8e.svg","962e0e8e26d18958909b5634971cb212"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});